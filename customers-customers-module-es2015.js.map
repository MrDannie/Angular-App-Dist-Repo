{"version":3,"sources":["./src/app/customers/customers-card/customers-card.component.html","./src/app/customers/customers-grid/customers-grid.component.html","./src/app/customers/customers.component.html","./src/app/customers/customers-card/customers-card.component.css","./src/app/customers/customers-card/customers-card.component.ts","./src/app/customers/customers-grid/customers-grid.component.css","./src/app/customers/customers-grid/customers-grid.component.ts","./src/app/customers/customers-routing.module.ts","./src/app/customers/customers.component.css","./src/app/customers/customers.component.ts","./src/app/customers/customers.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iaAAkW,kCAAkC,GAAG,kCAAkC,gjBAAgjB,6BAA6B,gOAAgO,uBAAuB,IAAI,qBAAqB,4U;;;;;;;;;;;;ACArxC;AAAe,wVAAyR,yZAAyZ,iNAAiN,6BAA6B,iIAAiI,mCAAmC,0CAA0C,kCAAkC,sCAAsC,oBAAoB,sCAAsC,iBAAiB,sCAAsC,uBAAuB,sCAAsC,uBAAuB,mLAAmL,sM;;;;;;;;;;;;ACA7jD;AAAe,oPAAqL,SAAS,yuF;;;;;;;;;;;;ACA7M;AAAe,iFAAkB,eAAe,KAAK,eAAe,2BAA2B,+BAA+B,kBAAkB,yBAAyB,wBAAwB,KAAK,sBAAsB,8BAA8B,oBAAoB,iBAAiB,iBAAiB,gBAAgB,KAAK,qBAAqB,kBAAkB,sBAAsB,sBAAsB,KAAK,oBAAoB,uBAAuB,KAAK,yBAAyB,sBAAsB,KAAK,0BAA0B,uBAAuB,qBAAqB,KAAK,4BAA4B,kBAAkB,KAAK,qBAAqB,iBAAiB,WAAW,gBAAgB,KAAK,gBAAgB,kBAAkB,KAAK,sBAAsB,kBAAkB,KAAK,+CAA+C,uzD;;;;;;;;;;;;;;;;;ACA/wB;AASzD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAEjC;QADO,cAAS,GAAgB,EAAE;IAClB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AANQ;IAAR,2DAAK,EAAE;yDAA4B;AADvB,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,wPAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAOlC;AAPkC;;;;;;;;;;;;;ACTnC;AAAe,sFAAuB,uBAAuB,KAAK,4BAA4B,4BAA4B,KAAK,qBAAqB,iBAAiB,WAAW,gBAAgB,KAAK,+CAA+C,uoB;;;;;;;;;;;;;;;;;ACA3L;AAQzD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAEjC;QADO,cAAS,GAAgB,EAAE,CAAC;IACnB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AANQ;IAAR,2DAAK,EAAE;yDAA6B;AADxB,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,wPAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAOlC;AAPkC;;;;;;;;;;;;;;;;;;;;;;ACRM;AACc;AAEI;AACwB;AACA;AAEnF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAkB,EAAE;CAC5C,CAAC;AAMF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAElC;AADQ,iCAAU,GAAG,CAAE,uEAAkB,EAAE,+FAAsB,EAAE,+FAAsB,CAAE,CAAC;AADhF,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE;QAC1C,OAAO,EAAE,CAAE,4DAAY,CAAE;KAC1B,CAAC;GACW,sBAAsB,CAElC;AAFkC;;;;;;;;;;;;;ACfnC;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;ACAX;AAGU;AACI;AAMhE,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAS7B,YAAoB,WAAwB,EACxB,aAA4B;QAD5B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QATlD,UAAK,GAAW,WAAW;QAC3B,cAAS,GAAgB,EAAE;QAC3B,sBAAiB,GAAgB,EAAE;QACnC,SAAI,GAAW,CAAC;QAChB,aAAQ,GAAW,EAAE;QACrB,gBAAW,GAAW,CAAC,CAAC;QAExB,oBAAe,GAAG,eAAe,CAAC;IAEoB,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAE1B,CAAC;IAED,WAAW,CAAC,IAAY;QACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;IAE/B,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACjF,SAAS,CAAC,SAAS,CAAC,EAAE;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,OAAO;YAC3D,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW;QAC1C,CAAC,CACH;IAAA,CAAC;IAEP,aAAa,CAAE,QAAgB;QAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS;QACzB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAEtC,CAAC;IAED,cAAc,CAAC,QAAQ,EAAE,SAAS;QAChC,IAAI,QAAQ,IAAI,SAAS,EAAC;YACxB,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC;YACxC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC;SACxE;aAAM;YACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;SACvC;IACH,CAAC;IAED,iBAAiB,CAAC,IAAqB;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;CAEA;;YAzCkC,uEAAW;YACT,2EAAa;;AAVrC,kBAAkB;IAJ9B,+DAAS,CAAC;QACT,+NAAyC;;KAE1C,CAAC;GACW,kBAAkB,CAkD9B;AAlD8B;AAoD/B,IAAK,eAIJ;AAJD,WAAK,eAAe;IAClB,qDAAQ;IACR,qDAAQ;IACR,mDAAO;AACT,CAAC,EAJI,eAAe,KAAf,eAAe,QAInB;;;;;;;;;;;;;;;;;;;;;;;;AClEwC;AACM;AAGoC;AACxB;AACJ;AAC4B;AACf;AAQpE,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAI;AAAnB,eAAe;IAL3B,8DAAQ,CAAC;QACT,OAAO,EAAE,CAAE,4DAAY,EAAE,kEAAY,EAAE,gFAAsB,CAAE;QAC/D,YAAY,EAAE,CAAG,+FAAsB,EAAE,uEAAkB,EAAE,+FAAsB,CAAE;QACrF,OAAO,EAAE,CAAE,uEAAkB,EAAE,+FAAsB,EAAE,+FAAsB,CAAE;KAC/E,CAAC;GACW,eAAe,CAAI;AAAJ","file":"customers-customers-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\r\\n <div class=\\\"row card-container\\\">\\r\\n     <div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" *ngFor=\\\"let customer of customers\\\" >\\r\\n         <div class=\\\"card\\\">\\r\\n             <div class=\\\"card-header\\\">\\r\\n                 <a [routerLink]=\\\"['/customers', customer.id, 'details']\\\" class=\\\"white\\\">\\r\\n                     {{customer.firstName | capitalize }} {{ customer.lastName | capitalize }} \\r\\n                 </a>\\r\\n                 <a [routerLink]=\\\"['/customers', customer.id, 'edit']\\\">\\r\\n                     <i title=\\\"Edit\\\"  \\r\\n                        class=\\\"pull-right glyphicon glyphicon-edit edit-icon white\\\"></i>\\r\\n                 </a>\\r\\n             </div>\\r\\n             <div class=\\\"card-body\\\">\\r\\n                 <div class=\\\"clearfix\\\">\\r\\n                     <div class=\\\"pull-left card-body-left\\\">\\r\\n                         <a href=\\\"#\\\" class=\\\"white\\\">\\r\\n                             <img src=\\\"assets/images/{{customer.gender | lowercase}}.png\\\" class=\\\"card-image\\\" />\\r\\n                         </a>\\r\\n                     </div>\\r\\n                     <div class=\\\"pull-left card-body-right\\\">\\r\\n                         <div class=\\\"card-body-content\\\">{{customer.city | trim }}, {{customer.state.name}}</div>\\r\\n                         <a [routerLink]=\\\"['/customers', customer.id, 'orders']\\\">View Orders</a>\\r\\n                     </div>\\r\\n                 </div>\\r\\n             </div>\\r\\n         </div>\\r\\n     </div>\\r\\n     <div *ngIf=\\\"!customers.length\\\" >\\r\\n         No Records Found\\r\\n     </div>\\r\\n </div>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\n <div class=\\\"row grid-container\\\">\\n     <div class=\\\"col-md-10\\\">\\n         <div class=\\\"table\\\">\\n             <table class=\\\"table table-striped table-hover\\\">\\n                 <thead>\\n                     <tr>\\n                         <th>&nbsp;</th>\\n                         <th >First Name</th>\\n                         <th >Last Name</th>\\n                         <th >Address</th>\\n                         <th >City</th>\\n                         <th >State</th>\\n                         <!-- Or you can do this directly rather than using sort-by directive -->\\n                         <th >Order Total</th>\\n                         <th>&nbsp;</th>\\n                     </tr>\\n                 </thead>\\n                 <tbody *ngFor=\\\"let customer of customers\\\">\\n                     <tr >\\n                         <td><img src=\\\"assets/images/{{customer.gender | lowercase}}.png\\\"\\n                                 class=\\\"grid-image\\\" alt=\\\"Customer Image\\\" /></td>\\n                         <td><a >{{ customer.firstName | capitalize }}</a></td>\\n                         <td>{{ customer.lastName | capitalize }}</td>\\n                         <td>{{ customer.address }}</td>\\n                         <td>{{ customer.city }}</td>\\n                         <td>{{ customer.state.name }}</td>\\n                         <td>{{ customer.orderTotal }}</td>\\n                         <td><a>View Orders</a></td>\\n                     </tr>\\n                     <tr *ngIf=\\\"!customers.length\\\">\\n                         <td>&nbsp;</td>\\n                         <td  colspan=\\\"7\\\">No Records Found</td>\\n                     </tr>\\n                 </tbody>\\n             </table>\\n         </div>\\n     </div>\\n </div>\\n</div>\"","export default \"<div class=\\\"customers view indent\\\">\\n  <div class=\\\"container\\\">\\n      <header>\\n          <h3>\\n              <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n              {{ title }}\\n          </h3>\\n      </header>\\n      <br />\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-10\\\">\\n              <div class=\\\"navbar\\\">\\n                  <ul class=\\\"nav navbar-nav\\\">\\n                      <li class=\\\"toolbar-item\\\">\\n                          <a (click)=\\\"changeDisplayMode(displayModeEnum.Card)\\\"\\n                          [class.active]=\\\"displayMode === displayModeEnum.Card\\\">\\n                              <span class=\\\"glyphicon glyphicon-th-large\\\"></span> Card View\\n                          </a>\\n                      </li>\\n                      <li class=\\\"toolbar-item\\\">\\n                          <a (click)=\\\"changeDisplayMode(displayModeEnum.Grid)\\\"\\n                          [class.active]=\\\"displayMode === displayModeEnum.Grid\\\">\\n                              <span class=\\\"glyphicon glyphicon-align-justify\\\"></span> List View\\n                          </a>\\n                      </li>\\n                      <li class=\\\"toolbar-item\\\">\\n                          <a (click)=\\\"changeDisplayMode(displayModeEnum.Map)\\\"\\n                           [class.active]=\\\"displayMode === displayModeEnum.Map\\\" >\\n                              <span class=\\\"glyphicon glyphicon-map-marker\\\"></span> Map View\\n                          </a>\\n                      </li>\\n                      <li class=\\\"toolbar-item\\\">\\n                          <a [routerLink]=\\\"['/customers', 0, 'edit']\\\">\\n                              <span class=\\\"glyphicon glyphicon-plus\\\"></span> New Customer\\n                          </a>\\n                      </li>\\n                  </ul>\\n                 <filter-textbox (filterAction)=\\\"performFilter($event)\\\" class=\\\"navbar-right\\\"></filter-textbox>\\n              </div>\\n          </div>\\n        </div>  \\n        <customers-card [hidden]=\\\"displayMode !== displayModeEnum.Card\\\" [customers]='filteredCustomers'></customers-card>\\n        <customers-grid  [hidden]=\\\"displayMode !== displayModeEnum.Grid\\\" [customers]=\\\"filteredCustomers\\\" ></customers-grid>\\n       \\n        <cm-map *ngIf=\\\"filteredCustomers.length\\\" \\n        [zoom]=\\\"2\\\" \\n        [enabled]=\\\"displayMode === displayModeEnum.Map\\\" \\n        [hidden]=\\\"displayMode !== displayModeEnum.Map\\\">\\n      <cm-map-point \\n        *ngFor=\\\"let customer of filteredCustomers\\\" \\n        [latitude]=\\\"customer.latitude\\\" \\n        [longitude]=\\\"customer.longitude\\\"\\n        [markerText]=\\\"'<h3>' + customer.firstName + ' ' + customer.lastName + '</a></h3>' + customer.city + ', ' + customer.state.name\\\"></cm-map-point>\\n    </cm-map>\\n       \\n       \\n       \\n       \\n        <pagination-tab (pageChanged)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\" [totalItems]=\\\"totalRecord\\\" ></pagination-tab>\\n        \\n</div>\\n</div>\\n\\n\"","export default \".card-container {\\r\\n width:85%;\\r\\n}\\r\\n\\r\\n.card {\\r\\n background-color:#fff;\\r\\n border: 1px solid #d4d4d4;\\r\\n height:120px;\\r\\n margin-bottom: 20px;\\r\\n position: relative;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n background-color:#027FF4;\\r\\n font-size:14pt;\\r\\n color:white;\\r\\n padding:5px;\\r\\n width:100%;\\r\\n}\\r\\n\\r\\n.card-close {\\r\\n color: white;\\r\\n font-weight:bold;\\r\\n margin-right:5px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n padding-left: 5px;\\r\\n}\\r\\n\\r\\n.card-body-left {\\r\\n margin-top: -5px;\\r\\n}\\r\\n\\r\\n.card-body-right {\\r\\n margin-left: 20px;\\r\\n margin-top: 2px;\\r\\n}\\r\\n\\r\\n.card-body-content {\\r\\n width: 100px;\\r\\n}\\r\\n\\r\\n.card-image {\\r\\n height:50px;width:50px;margin-top:10px;\\r\\n}\\r\\n\\r\\n.white {\\r\\n color: white;\\r\\n}\\r\\n\\r\\n.white:hover {\\r\\n color: white;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXJzL2N1c3RvbWVycy1jYXJkL2N1c3RvbWVycy1jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxTQUFTO0FBQ1Y7O0FBRUE7Q0FDQyxxQkFBcUI7Q0FDckIseUJBQXlCO0NBQ3pCLFlBQVk7Q0FDWixtQkFBbUI7Q0FDbkIsa0JBQWtCO0FBQ25COztBQUVBO0NBQ0Msd0JBQXdCO0NBQ3hCLGNBQWM7Q0FDZCxXQUFXO0NBQ1gsV0FBVztDQUNYLFVBQVU7QUFDWDs7QUFFQTtDQUNDLFlBQVk7Q0FDWixnQkFBZ0I7Q0FDaEIsZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MsaUJBQWlCO0FBQ2xCOztBQUVBO0NBQ0MsZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MsaUJBQWlCO0NBQ2pCLGVBQWU7QUFDaEI7O0FBRUE7Q0FDQyxZQUFZO0FBQ2I7O0FBRUE7Q0FDQyxXQUFXLENBQUMsVUFBVSxDQUFDLGVBQWU7QUFDdkM7O0FBRUE7Q0FDQyxZQUFZO0FBQ2I7O0FBRUE7Q0FDQyxZQUFZO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9jdXN0b21lcnMvY3VzdG9tZXJzLWNhcmQvY3VzdG9tZXJzLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lciB7XHJcbiB3aWR0aDo4NSU7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuIGJhY2tncm91bmQtY29sb3I6I2ZmZjtcclxuIGJvcmRlcjogMXB4IHNvbGlkICNkNGQ0ZDQ7XHJcbiBoZWlnaHQ6MTIwcHg7XHJcbiBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uY2FyZC1oZWFkZXIge1xyXG4gYmFja2dyb3VuZC1jb2xvcjojMDI3RkY0O1xyXG4gZm9udC1zaXplOjE0cHQ7XHJcbiBjb2xvcjp3aGl0ZTtcclxuIHBhZGRpbmc6NXB4O1xyXG4gd2lkdGg6MTAwJTtcclxufVxyXG5cclxuLmNhcmQtY2xvc2Uge1xyXG4gY29sb3I6IHdoaXRlO1xyXG4gZm9udC13ZWlnaHQ6Ym9sZDtcclxuIG1hcmdpbi1yaWdodDo1cHg7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHkge1xyXG4gcGFkZGluZy1sZWZ0OiA1cHg7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHktbGVmdCB7XHJcbiBtYXJnaW4tdG9wOiAtNXB4O1xyXG59XHJcblxyXG4uY2FyZC1ib2R5LXJpZ2h0IHtcclxuIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gbWFyZ2luLXRvcDogMnB4O1xyXG59XHJcblxyXG4uY2FyZC1ib2R5LWNvbnRlbnQge1xyXG4gd2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG4uY2FyZC1pbWFnZSB7XHJcbiBoZWlnaHQ6NTBweDt3aWR0aDo1MHB4O21hcmdpbi10b3A6MTBweDtcclxufVxyXG5cclxuLndoaXRlIHtcclxuIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLndoaXRlOmhvdmVyIHtcclxuIGNvbG9yOiB3aGl0ZTtcclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ICustomer } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'customers-card',\n  templateUrl: './customers-card.component.html',\n  styleUrls: ['./customers-card.component.css']\n})\nexport class CustomersCardComponent implements OnInit {\n@Input() customers: ICustomer[] = []\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".grid-container  div {\\r\\n padding-left: 0px;\\r\\n}\\r\\n\\r\\n.grid-container td {\\r\\n vertical-align: middle;\\r\\n}\\r\\n\\r\\n.grid-image {\\r\\n height:50px;width:50px;margin-top:10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXJzL2N1c3RvbWVycy1ncmlkL2N1c3RvbWVycy1ncmlkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxpQkFBaUI7QUFDbEI7O0FBRUE7Q0FDQyxzQkFBc0I7QUFDdkI7O0FBRUE7Q0FDQyxXQUFXLENBQUMsVUFBVSxDQUFDLGVBQWU7QUFDdkMiLCJmaWxlIjoic3JjL2FwcC9jdXN0b21lcnMvY3VzdG9tZXJzLWdyaWQvY3VzdG9tZXJzLWdyaWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmlkLWNvbnRhaW5lciAgZGl2IHtcclxuIHBhZGRpbmctbGVmdDogMHB4O1xyXG59XHJcblxyXG4uZ3JpZC1jb250YWluZXIgdGQge1xyXG4gdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLmdyaWQtaW1hZ2Uge1xyXG4gaGVpZ2h0OjUwcHg7d2lkdGg6NTBweDttYXJnaW4tdG9wOjEwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ICustomer } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'customers-grid',\n  templateUrl: './customers-grid.component.html',\n  styleUrls: ['./customers-grid.component.css']\n})\nexport class CustomersGridComponent implements OnInit {\n@Input() customers: ICustomer[] = [];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CustomersComponent } from './customers.component';\r\nimport { CustomersCardComponent } from './customers-card/customers-card.component';\r\nimport { CustomersGridComponent } from './customers-grid/customers-grid.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CustomersComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class CustomersRoutingModule {\r\n  static components = [ CustomersComponent, CustomersCardComponent, CustomersGridComponent ];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { DataService } from '../core/services/data.service';\nimport { FilterService } from '../core/services/filter.service';\n\n@Component({\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\ntitle: string = \"Customers\"\ncustomers: ICustomer[] = []\nfilteredCustomers: ICustomer[] = []\npage: number = 1\npageSize: number = 10\ntotalRecord: number = 0;\ndisplayMode: DisplayModeEnum;\ndisplayModeEnum = DisplayModeEnum;\n  constructor(private dataService: DataService,\n              private filterService: FilterService) { }\n\n  ngOnInit() {\n    this.displayMode = DisplayModeEnum.Card;\n    this.getCustomersPage(1)\n\n  }\n\n  pageChanged(page: number){\n      this.getCustomersPage(page)\n      \n  }\n\n  getCustomersPage(page: number){\n    this.dataService.getCustomersPageOne((page - 1) * this.pageSize, this.pageSize * page)\n        .subscribe(customers =>  {\n          this.customers = this.filteredCustomers = customers.results\n          this.totalRecord = customers.totalRecord\n        }\n     )}\n\nperformFilter( filterBy: string ){\n  let item = this.customers\n  this.filterFunction(filterBy, item);\n  \n}  \n\nfilterFunction(filterBy, customers){\n  if( filterBy && customers){\n    filterBy = filterBy.toLocaleLowerCase();\n    this.filteredCustomers = this.filterService.filter(filterBy, customers)\n  } else {\n  this.filteredCustomers = this.customers;\n  }\n}\n\nchangeDisplayMode(mode: DisplayModeEnum) {\n  this.displayMode = mode;\n}\n\n}\n\nenum DisplayModeEnum {\n  Card = 0,\n  Grid = 1,\n  Map = 2\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { CustomersCardComponent } from './customers-card/customers-card.component';\r\nimport { CustomersComponent } from './customers.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CustomersGridComponent } from './customers-grid/customers-grid.component';\r\nimport { CustomersRoutingModule } from './customers-routing.module';\r\n\r\n\r\n@NgModule({\r\n imports: [ CommonModule, SharedModule, CustomersRoutingModule ],\r\n declarations: [  CustomersCardComponent, CustomersComponent, CustomersGridComponent ],\r\n exports: [ CustomersComponent, CustomersCardComponent, CustomersGridComponent ]\r\n})\r\nexport class CustomersModule { }"],"sourceRoot":"webpack:///"}